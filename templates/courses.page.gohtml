{{template "base" .}}

{{define "content"}}
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="mt-5">
                    <a href="/" class="link-secondary link-offset-1 link-offset-1-hover link-underline link-underline-opacity-0 link-underline-opacity-100-hover">Back to Home page</a>
                    <h1 class="mt-3 text-start">üìö courses</h1>
                </div>

                <div class="row">
                    <div class="text-start mt-4">
                        {{$res := index .Data "courses"}}
                        {{$users := index .Data "users"}}

                        <div class="modal fade" id="editCourseModal" tabindex="-1" aria-labelledby="editCourseModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content">
                                    <div class="modal-body">
                                        <form id="editCourseForm">
                                            <input type="hidden" id="editID">
                                            <div class="mb-3">
                                                <label for="editCourseTitle" class="form-label"><b>title</b></label>
                                                <input type="text" class="form-control form-control-sm" id="editTitle" required>
                                            </div>
                                            <div class="mb-3">
                                                <label for="editCourseDescription" class="form-label"><b>description</b></label>
                                                <input type="text" class="form-control form-control-sm" id="editDescription" required>
                                            </div>
                                            <div class="mb-3">
                                                <label for="editInstructorID" class="form-label"><b>üóùÔ∏è instructor_id</b></label>
                                                <select class="form-select form-select-sm" id="editInstructorID" required>
                                                    <option value="" disabled selected>instructor_id</option>
                                                    {{range $users}}
                                                        <option value="{{.ID}}">{{.ID}} ({{.FirstName}} {{.LastName}})</option>
                                                    {{end}}
                                                </select>
                                            </div>
                                        </form>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-sm btn-light" data-bs-dismiss="modal">Close</button>
                                        <button type="button" class="btn btn-sm btn-success" onclick="saveCourseChanges()">Save</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <table class="table table-hover">
                            <thead>
                            <tr>
                                <th scope="col">üîë id</th>
                                <th scope="col">title</th>
                                <th scope="col">description</th>
                                <th scope="col">üóùÔ∏è instructor_id</th>
                                <th scope="col"></th>
                            </tr>
                            </thead>
                            <tbody>
                                {{ $lastID := 0 }}
                                    {{range $res}}
                                        <tr>
                                            <td style="width: 5%"><b>{{ .ID }}</b></td>
                                            <td style="width: 25%">{{ .Title }}</td>
                                            <td style="width: 50%">{{ .Description }}</td>
                                            <td>
                                                <a href="/users" class="text-decoration-none text-reset">
                                                    <b data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="{{ .Instructor.FirstName }} {{ .Instructor.LastName }}">{{ .InstructorID }}</b>
                                                </a>
                                            </td>
                                            <td>
                                                <div class="d-flex justify-content-end gap-2">
                                                    <button type="button" class="btn btn-sm btn-light edit-btn" data-bs-toggle="modal" data-bs-target="#editCourseModal" data-id="{{.ID}}" data-title="{{.Title}}" data-description="{{.Description}}" data-instructorid="{{.InstructorID}}">‚úèÔ∏è</button>
                                                    <button type="button" class="btn btn-sm btn-light delete-btn" data-id="{{.ID}}">‚ùåÔ∏è</button>
                                                </div>
                                            </td>
                                        </tr>
                                    {{ $lastID = .ID }}
                                {{end}}
                                <tr class="table-light">
                                    <form id="createCourseForm" method="post">
                                        <td>
                                        </td>
                                        <td>
                                            <input type="text" name="title" id="courseTitle" class="form-control form-control-sm" placeholder="title" required>
                                        </td>
                                        <td>
                                            <input type="text" name="description" id="courseDescription" class="form-control form-control-sm" placeholder="description" required>
                                        </td>
                                        <td>
                                            <select name="instructorID" id="courseInstructorID" class="form-select form-select-sm" required>
                                                <option value="" disabled selected>instructor_id</option>
                                                {{range $users}}
                                                    <option value="{{.ID}}">{{.ID}} ({{ .FirstName }} {{ .LastName }})</option>
                                                {{end}}
                                            </select>
                                        </td>
                                        <td>
                                            <div class="d-flex justify-content-end gap-2">
                                                <button type="submit" class="btn btn-sm btn-success">Create</button>
                                            </div>
                                        </td>
                                    </form>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const createForm = document.getElementById('createCourseForm');
            createForm.addEventListener('submit', function (e) {
                e.preventDefault();

                const formData = new FormData(createForm);
                const searchParams = new URLSearchParams();

                for (const pair of formData) {
                    searchParams.append(pair[0], pair[1]);
                }

                fetch('/courses/create', {
                    method: 'POST',
                    body: searchParams,
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        window.location.reload();
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('There was an error trying to create the course.');
                    });
            });
        });

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.delete-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const courseID = this.getAttribute('data-id');
                    if (confirm('Are you sure you want to delete this course?')) {
                        fetch(`/courses/delete/${courseID}`, {
                            method: 'DELETE',
                        })
                            .then(response => {
                                if (response.ok) {
                                    location.reload();
                                } else {
                                    alert('There was an error trying to delete the course.');
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                            });
                    }
                });
            });
        });

        var editCourseModal = document.getElementById('editCourseModal')

        editCourseModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget

        var courseId = button.getAttribute('data-id')
        var courseTitle = button.getAttribute('data-title')
        var courseDescription = button.getAttribute('data-description')
        var instructorID = button.getAttribute('data-instructorid')

        var modalTitleInput = editCourseModal.querySelector('#editTitle')
        var modalDescriptionInput = editCourseModal.querySelector('#editDescription')
        var modalInstructorSelect = editCourseModal.querySelector('#editInstructorID')
        var modalCourseIdInput = editCourseModal.querySelector('#editID')

        modalTitleInput.value = courseTitle
        modalDescriptionInput.value = courseDescription
        modalInstructorSelect.value = instructorID
        modalCourseIdInput.value = courseId
        })

        function saveCourseChanges() {
            var form = document.getElementById('editCourseForm');

            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            var courseId = document.getElementById('editID').value;
            var title = document.getElementById('editTitle').value;
            var description = document.getElementById('editDescription').value;
            var instructorId = document.getElementById('editInstructorID').value;

            fetch('/courses/update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `id=${courseId}&title=${encodeURIComponent(title)}&description=${encodeURIComponent(description)}&instructorID=${instructorId}`
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(() => {
                    window.location.reload();
                })
                .catch(error => console.error('Error:', error));
        }
    </script>
{{end}}